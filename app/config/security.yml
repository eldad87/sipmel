# To get started with security, check out the documentation:
# http://symfony.com/doc/current/security.html
security:
    encoders:
        AppBundle\Entity\User: bcrypt

    # http://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    providers:
        database_users:
            entity: { class: AppBundle:User , property: username }


    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
            stateless: true
        api_user_public:
            pattern: ^/API/v[0-9]+/User/(Access/Token|ForgotPassword|Register)
            security: false
            stateless: true
        api_doc:
            pattern: ^/API/Doc
            security: false
            stateless: true
        login:
            security: false #Disabled by default, enabled in testing
            pattern:  ^/API/Basic/login
            stateless: true
            anonymous: true
            form_login:
                check_path:               api_basic_auth_login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false
        api_private:
            pattern:   ^/API
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

    access_control:
        - { path: ^/API/Basic/login, roles: IS_AUTHENTICATED_ANONYMOUSLY } #For Testing
        - { path: ^/API/v[0-9]+/User/(Access/Token|ForgotPassword|Register), roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/API/Doc, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/API/v[0-9]+/User, roles: [ROLE_USER, ROLE_API] }
        - { path: ^/API, roles: ROLE_API }
        - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY }

        # Example for resources with JSON Web Token authentication
        #- { path: ^/api/secure, roles: ROLE_ADMIN }

            # http_basic: ~
            # http://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: ~
            # http://symfony.com/doc/current/cookbook/security/form_login_setup.html

    role_hierarchy:
        ROLE_API:         [] #Send and manage lists, we can add later ROLE_HELPDESK for sub components like ZendDesk etc.
        ROLE_ADMIN:       [ROLE_USER, ROLE_API]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]